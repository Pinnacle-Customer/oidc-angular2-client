{"version":3,"file":"oidc-angular2-client.umd.js","sources":["../src/security.constants.ts","../src/oidc.service.ts","../src/httpclient.service.ts","../src/security.component.ts","../src/security.module.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class SecurityConstants {\r\n    public SilentTokenStartAfter: number = 1000;\r\n    public SilentTokenIntervals: number = 30000;\r\n    \r\n    public TokenRenewBeforeSeconds: number = 90;\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { OidcClient } from 'oidc-client';\r\nimport { SecurityConstants } from './security.constants';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    private mgr: any; \r\n    private storage: any;\r\n    private headers = new Headers({ 'Accept': 'application/json', 'Content-Type': 'application/json' });\r\n    private options = new RequestOptions({ headers: this.headers });\r\n\r\n    constructor(private router: Router, private http: Http, private securityConstants: SecurityConstants) {\r\n        this.storage = sessionStorage;\r\n        this.runSilentTokenRenew();\r\n    }    \r\n\r\n    getUserAuthorized(): boolean {\r\n        return this.retrieve('userData') !== '';\r\n    }\r\n    \r\n    getUserName(): string {\r\n        return this.retrieve('userData') === '' ? '' : this.retrieve('userData').profile.name;\r\n    }\r\n    \r\n    getAccessToken(): string {\r\n        return this.retrieve('userData') === '' ? '' : this.retrieve('userData').access_token;\r\n    }\r\n\r\n    getTokenExpiresInSeconds(): number {\r\n        return this.retrieve('userData') === '' ? 0 : this.retrieve('userData').expires_at - Math.floor(new Date().getTime() / 1000);\r\n    }\r\n    \r\n    clearUserData() {\r\n        this.store('userData', null);\r\n    }\r\n\r\n    signIn() {\r\n        this.getOidcManager()\r\n            .then((res: any) => {\r\n                res.signinRedirect().then(() => {\r\n                    }).catch((err: any) => {\r\n                        console.log(err);\r\n                    });\r\n            });\r\n    }\r\n\r\n    signOut() {\r\n        this.getOidcManager()\r\n            .then((res: any) => {\r\n                res.signoutRedirect().then(() => {\r\n                    this.store('userData', null);\r\n                }).catch((err: any) => {\r\n                    console.log(err);\r\n                });\r\n            });\r\n    };\r\n\r\n    signinRedirectCallback() {\r\n        this.getOidcManager()\r\n            .then((res: any) => {\r\n                res.signinRedirectCallback().then(() => {\r\n                    res.getUser()\r\n                        .then((user: any) => {\r\n                            if (user) {\r\n                                this.store('userData', user);\r\n                                this.router.navigate(['/']);\r\n                            }\r\n                        });\r\n                });\r\n            });\r\n    };\r\n\r\n    private getOidcManager() {\r\n        return new Promise((resolve, reject) => {\r\n            \r\n            if (this.mgr) {\r\n                resolve(this.mgr);\r\n                return;\r\n            }\r\n\r\n            this.getConfigFile()\r\n                .subscribe((data) => {\r\n                    this.mgr = new Oidc.UserManager(data);\r\n                    resolve(this.mgr);\r\n            });\r\n        });\r\n    }\r\n\r\n    private runSilentTokenRenew(): void {\r\n        this.getConfigFile()\r\n            .subscribe((data) => {\r\n                if(!data.automaticSilentRenew) {\r\n                    console.log('Silent renew not configured');\r\n                    return;\r\n                }\r\n\r\n                const timer = Observable.timer(this.securityConstants.SilentTokenStartAfter, \r\n                this.securityConstants.SilentTokenIntervals);\r\n        \r\n                timer.subscribe(t=> {\r\n                    const expiresIn = this.getTokenExpiresInSeconds();\r\n                    \r\n                    if (expiresIn) {\r\n                        console.log(`Expires in: ${expiresIn}`);\r\n                        if (expiresIn < this.securityConstants.TokenRenewBeforeSeconds) {\r\n                            this.getOidcManager()\r\n                                .then((res: any) => {\r\n                                    res.signinSilent().then((user: any) => {\r\n                                        console.log(user);\r\n                                        sessionStorage.setItem('userData', JSON.stringify(user));\r\n                                    }).catch((err: any) => {\r\n                                        console.log(err);\r\n                                    });\r\n                                });\r\n                        }\r\n                    } else {\r\n                        console.log('no user');\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    private getConfigFile(): Observable<any> {\r\n        return this.http.get('oauthconfig.json', this.options)\r\n            .map((response: Response) => response.json())\r\n            .catch((error: any) => {\r\n                console.error(error);\r\n                return Observable.throw(error.json().error || 'Server Error');\r\n            });            \r\n    }\r\n\r\n    private store(key: string, value: any) {\r\n        this.storage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    private retrieve(key: string): any {\r\n        const item = this.storage.getItem(key);\r\n\r\n        if (item && item !== 'undefined' && item !== 'null') {\r\n            return JSON.parse(this.storage.getItem(key));\r\n        }\r\n        return '';\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthService } from './oidc.service';\r\n\r\n@Injectable()\r\nexport class HttpClientService {\r\n\r\n  constructor(private http: Http, private authService: AuthService) {}\r\n\r\n  createAuthorizationHeader(headers: Headers) {\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Accept', 'application/json');\r\n\r\n    const token = this.authService.getAccessToken();\r\n    if (token !== '') {\r\n        const tokenValue = `Bearer ${token}`;\r\n        headers.append('Authorization', tokenValue);\r\n    }\r\n  }\r\n\r\n  get(url: string): Observable<Response> {\r\n    const headers = new Headers();\r\n    this.createAuthorizationHeader(headers);\r\n    return this.http.get(url, {\r\n      headers: headers\r\n    }).catch(err => this.handleError(err));\r\n  }\r\n\r\n  post(url: string, data: any): Observable<Response> {\r\n    const headers = new Headers();\r\n    this.createAuthorizationHeader(headers);\r\n    return this.http.post(url, data, {\r\n      headers: headers\r\n    }).catch(err => this.handleError(err));\r\n  }\r\n\r\n  put(url: string, data: any): Observable<Response> {\r\n      const headers = new Headers();\r\n      this.createAuthorizationHeader(headers);\r\n      return this.http.put(url, data, {\r\n          headers: headers\r\n      }).catch(err => this.handleError(err));\r\n  }\r\n\r\n  delete(url: string): Observable<Response> {\r\n      const headers = new Headers();\r\n      this.createAuthorizationHeader(headers);\r\n      return this.http.delete(url, {\r\n          headers: headers\r\n      }).catch(err => this.handleError(err));\r\n  }\r\n    \r\n  private handleError(error: Response) {\r\n        console.error(error);\r\n        if (error.status === 401) { this.authService.clearUserData(); }\r\n        return Observable.throw(error);\r\n  }\r\n}","﻿import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './oidc.service';\r\n\r\n@Component({\r\n    moduleId: 'SecurityComponent',\r\n    template: '<div></div>'\r\n})\r\n\r\nexport class SecurityComponent implements OnInit {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    ngOnInit(): void {\r\n        if (window.location.hash) {\r\n            this.authService.signinRedirectCallback();\r\n        }\r\n    }\r\n}","﻿import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthService } from './oidc.service';\r\nimport { HttpClientService } from './httpclient.service';\r\nimport { SecurityComponent } from './security.component';\r\nimport { SecurityConstants } from './security.constants';\r\n\r\nimport './rxjs-extensions';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild([\r\n            { path: 'callback', component: SecurityComponent }\r\n        ])\r\n    ],\r\n    declarations: [\r\n        SecurityComponent\r\n    ],\r\n})\r\n\r\nexport class SecurityModule {\r\n    public static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: SecurityModule,\r\n            providers: [\r\n                AuthService,\r\n                HttpClientService,\r\n                SecurityConstants\r\n            ]\r\n        };\r\n    }\r\n}"],"names":["Injectable","Headers","RequestOptions","Observable","AuthService","HttpClientService","SecurityComponent","Component","SecurityModule","NgModule","RouterModule"],"mappings":"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"}